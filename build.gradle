apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'application'
apply plugin: "maven"
apply plugin: "maven-publish"


version = '1.0.0' 

mainClassName = 'ch.psi.athos.AthosCameras'
ext.timestamp = new Date().format("yyMMddHHmm")
ext.addopens = 'java.base/sun.nio.ch java.base/java.io java.desktop/sun.awt java.desktop/javax.swing.text.html java.desktop/sun.swing java.base/jdk.internal.loader'


repositories {
    jcenter()
    maven { url "http://maven.imagej.net/content/repositories/public/" }     
    maven { url "https://dl.bintray.com/paulscherrerinstitute/hltools/" }    
}

dependencies {
    testCompile 'junit:junit:4.12'
    //compile 'ch.psi:pshell:1.13.0'
    compile files('/Users/gobbo_a/dev/pshell/pshell/build/libs/pshell-1.14.0-fat.jar')
}

jar {
    baseName = project.name
    manifest {
        attributes (
            'Main-Class': mainClassName, 
            'Implementation-Version': version,
            'Build-Time': timestamp,
            'Add-Opens': addopens
        )
    }       
}

uploadArchives {
    repositories {
        mavenDeployer {
            setUniqueVersion(true)
            repository(url: artifactoryUrlRel){
            	authentication(userName: artifactoryUser, password: artifactoryPwd)
            }
            snapshotRepository(url: artifactoryUrlRel){
            	authentication(userName: artifactoryUser, password: artifactoryPwd)
            }
            pom.groupId = project.group
            pom.artifactId =  project.name
            pom.version = version
        }
    }
}

task fatJar(type: Jar, dependsOn: jar) {
    classifier 'fat'
    duplicatesStrategy = 'exclude'  
    manifest {
        attributes (
            'Main-Class': mainClassName, 
            'Implementation-Version': version,
            'Build-Time': timestamp,
            'Add-Opens': addopens
        )
    }    
    doFirst {
        from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } } 
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA', 'MANIFEST.MF', '*.INFO' , 'LICENSE'   
        
    with jar
}